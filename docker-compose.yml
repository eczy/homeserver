version: "3"

networks:
  gitea:
    external: false
  redmine:
    external: false
  concourse:
    external: false

services:
  reverse-proxy:
    image: traefik:v2.8
    command: 
    - --api.insecure=true
    - --providers.docker
    - --entrypoints.http.address=:80
    - --entrypoints.http.http.redirections.entryPoint.to=https
    - --entrypoints.http.http.redirections.entryPoint.scheme=https
    - --entrypoints.https.address=:443
    ports:
    - "80:80"
    - "443:443"
    - "8080:8080"
    networks:
    - gitea
    - redmine
    - concourse
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
    - USER_ID=1000
    - USER_GID=1000

    - GITEA__database__DB_TYPE=postgres
    - GITEA__database__HOST=gitea-db:5432
    - GITEA__database__NAME=gitea
    - GITEA__database__USER=${GITEA_DB_USERNAME}
    - GITEA__database__PASSWD=${GITEA_DB_PASSWORD}

    - GITEA__server__SSH_PORT=${GITEA_SSH_PORT}
    - GITEA__server__DOMAIN=${GITEA_DOMAIN}
    restart: always
    ports:
    - '${GITEA_SSH_PORT}:22'
    networks:
    - gitea
    volumes:
    - ./gitea:/data
    - /etc/timezone:/etc/timezone:ro
    - /etc/localtime:/etc/localtime:ro
    labels:
    - "traefik.http.routers.gitea.rule=Host(`${GITEA_DOMAIN}`)"
    - "traefik.http.routers.gitea.tls=true"
    - "traefik.http.services.gitea.loadbalancer.server.port=3000"
    depends_on:
    - gitea-db

  gitea-db:
    image: postgres:14
    container_name: gitea-db
    restart: always
    environment:
    - POSTGRES_USER=${GITEA_DB_USERNAME}
    - POSTGRES_PASSWORD=${GITEA_DB_PASSWORD}
    - POSTGRES_DB=gitea
    networks:
    - gitea
    volumes:
    - ./postgres/gitea:/var/lib/postgresql/data

  redmine:
    image: redmine:5
    restart: always
    environment:
      REDMINE_DB_POSTGRES: redmine-db
      REDMINE_DB_USERNAME: ${REDMINE_DB_USERNAME}
      REDMINE_DB_PASSWORD: ${REDMINE_DB_PASSWORD}
      REDMINE_DB_DATABASE: ${REDMINE_DB_DATABASE}
      REDMINE_PLUGINS_MIGRATE: 1
    networks:
    - redmine
    volumes:
    - ./redmine/files:/usr/src/redmine/files
    - ./redmine/plugins:/usr/src/redmine/plugins
    - ./redmine/themes:/usr/src/redmine/public/themes
    labels:
    - "traefik.http.routers.redmine.rule=Host(`${REDMINE_DOMAIN}`)"
    - "traefik.http.routers.redmine.tls=true"
    - "traefik.http.services.redmine.loadbalancer.server.port=3000"
    depends_on:
    - redmine-db

  redmine-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${REDMINE_DB_USERNAME}
      POSTGRES_PASSWORD: ${REDMINE_DB_PASSWORD}
    networks:
    - redmine
    volumes:
    - ./postgres/redmine:/var/lib/postgresql/data

  concourse-db:
    image: postgres
    environment:
      POSTGRES_DB: concourse
      POSTGRES_USER: ${CONCOURSE_DB_USERNAME}
      POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
    networks:
    - concourse
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    volumes:
    - ./postgres/concourse:/var/lib/postgresql/data

  
  concourse-web:
    image: concourse/concourse
    command: web
    links: [concourse-db]
    depends_on: [concourse-db]
    # ports: ["8080:8080"]
    volumes: ["./concourse/keys/web:/concourse-keys"]
    environment:
      CONCOURSE_EXTERNAL_URL: ${CONCOURSE_EXTERNAL_URL}
      CONCOURSE_POSTGRES_HOST: concourse-db
      CONCOURSE_POSTGRES_USER: ${CONCOURSE_DB_USERNAME}
      CONCOURSE_POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
      CONCOURSE_POSTGRES_DATABASE: concourse
      CONCOURSE_ADD_LOCAL_USER: ${CONCOURSE_ADD_LOCAL_USER}
      CONCOURSE_MAIN_TEAM_LOCAL_USER: ${CONCOURSE_MAIN_TEAM_LOCAL_USER}
    networks:
    - concourse
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    labels:
    - "traefik.http.routers.concourse.rule=Host(`${CONCOURSE_HOST}`)"
    - "traefik.http.routers.concourse.tls=true"
    - "traefik.http.services.concourse.loadbalancer.server.port=8080"

  concourse-worker:
    image: concourse/concourse
    command: worker
    privileged: true
    depends_on: [concourse-web]
    volumes: ["./concourse/keys/worker:/concourse-keys"]
    links: [concourse-web]
    stop_signal: SIGUSR2
    environment:
      CONCOURSE_TSA_HOST: concourse-web:2222
      # enable DNS proxy to support Docker's 127.x.x.x DNS server
      CONCOURSE_GARDEN_DNS_PROXY_ENABLE: "true"
    networks:
    - concourse
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  backup:
    build: ./backup
    environment:
      REDMINE_DB_USERNAME: ${REDMINE_DB_USERNAME}
      REDMINE_DB_PASSWORD: ${REDMINE_DB_PASSWORD}
      CONCOURSE_DB_USERNAME: ${CONCOURSE_DB_USERNAME}
      CONCOURSE_DB_PASSWORD: ${CONCOURSE_DB_PASSWORD}
    volumes:
    - ./redmine/files:/data/redmine/files
    - ./backup/archives:/backup/archives
    - ./backup/redmine:/backup/redmine
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - redmine
